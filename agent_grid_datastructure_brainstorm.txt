Need a data structure that will allow for the following:
-ability to cycle through each agent in a consistent order
-ability to see spatially if there are agents next to it
-ability to chose a spot on a grid that has no agents


SOLUTION:
a grid with either zero or an agent
the agent has x and y coords in it in order to point back to grid
there is a separate array that points to each agent
CON: duplicated info, potential for an agents xy coords to be out of sync 
CON: may be complicated
PRO: extendable to more complicated agents
PRO: all usecases are satisfied
CON: complicated
we need a cyclical pointer  grid square -> agent, agent -> grid square





SOLUTION:
we just have an array of agents, no grid datastructure
PRO: simple, no risk of data getting out of sync
CON: must cycle through each agent each time we want to query a position, slow (oh well?)

SOLUTION:
we just have a grid with states of each square, no agent datastructure
PRO: easy to query each position
CON: difficult to cycle through each agent


SOLUTION:
we have a grid of 0 and 1
we have a set of agents with state and x and y
CON: lots of duplicated info, not extendable to more complicated agents
PRO: simple to work with





